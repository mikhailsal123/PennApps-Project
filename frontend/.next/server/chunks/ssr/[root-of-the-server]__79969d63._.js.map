{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/dm_sans_e6013972.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"dm_sans_e6013972-module__05-u6G__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/dm_sans_e6013972.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22page.tsx%22,%22import%22:%22DM_Sans%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22weight%22:[%22200%22,%22500%22,%22700%22]}],%22variableName%22:%22dmSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'DM Sans', 'DM Sans Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,kKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,kKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,kKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelsaleev/PennApps-Project/frontend/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,kLAAO,EAAC,IAAA,yJAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelsaleev/PennApps-Project/frontend/src/app/components/ui/typing-animation.tsx"],"sourcesContent":["\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { motion, MotionProps, useInView } from \"motion/react\";\nimport { useEffect, useRef, useState } from \"react\";\n\ninterface TypingAnimationProps extends MotionProps {\n    children: string;\n    className?: string;\n    duration?: number;\n    delay?: number;\n    as?: React.ElementType;\n    startOnView?: boolean;\n}\n\nexport function TypingAnimation({\n    children,\n    className,\n    duration = 100,\n    delay = 0,\n    as: Component = \"div\",\n    startOnView = false,\n    ...props\n}: TypingAnimationProps) {\n    const MotionComponent = motion.create(Component, {\n        forwardMotionProps: true,\n    });\n\n    const [displayedText, setDisplayedText] = useState<string>(\"\");\n    const [started, setStarted] = useState(false);\n    const elementRef = useRef<HTMLElement | null>(null);\n    const isInView = useInView(elementRef as React.RefObject<Element>, {\n        amount: 0.3,\n        once: true,\n    });\n\n    useEffect(() => {\n        if (!startOnView) {\n            const startTimeout = setTimeout(() => {\n                setStarted(true);\n            }, delay);\n            return () => clearTimeout(startTimeout);\n        }\n\n        if (!isInView) return;\n\n        const startTimeout = setTimeout(() => {\n            setStarted(true);\n        }, delay);\n\n        return () => clearTimeout(startTimeout);\n    }, [delay, startOnView, isInView]);\n\n    useEffect(() => {\n        if (!started) return;\n\n        const graphemes = Array.from(children);\n        let i = 0;\n        const typingEffect = setInterval(() => {\n            if (i < graphemes.length) {\n                setDisplayedText(graphemes.slice(0, i + 1).join(\"\"));\n                i++;\n            } else {\n                clearInterval(typingEffect);\n            }\n        }, duration);\n\n        return () => {\n            clearInterval(typingEffect);\n        };\n    }, [children, duration, started]);\n\n    return (\n        <MotionComponent\n            ref={elementRef}\n            className={cn(\"text-4xl font-bold leading-[5rem] tracking-[-0.02em]\", className)}\n            {...props}\n        >\n            {displayedText}\n        </MotionComponent>\n    );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AACA;AAJA;;;;;AAeO,SAAS,gBAAgB,EAC5B,QAAQ,EACR,SAAS,EACT,WAAW,GAAG,EACd,QAAQ,CAAC,EACT,IAAI,YAAY,KAAK,EACrB,cAAc,KAAK,EACnB,GAAG,OACgB;IACnB,MAAM,kBAAkB,gNAAM,CAAC,MAAM,CAAC,WAAW;QAC7C,oBAAoB;IACxB;IAEA,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,6NAAQ,EAAS;IAC3D,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,6NAAQ,EAAC;IACvC,MAAM,aAAa,IAAA,2NAAM,EAAqB;IAC9C,MAAM,WAAW,IAAA,sMAAS,EAAC,YAAwC;QAC/D,QAAQ;QACR,MAAM;IACV;IAEA,IAAA,8NAAS,EAAC;QACN,IAAI,CAAC,aAAa;YACd,MAAM,eAAe,WAAW;gBAC5B,WAAW;YACf,GAAG;YACH,OAAO,IAAM,aAAa;QAC9B;QAEA,IAAI,CAAC,UAAU;QAEf,MAAM,eAAe,WAAW;YAC5B,WAAW;QACf,GAAG;QAEH,OAAO,IAAM,aAAa;IAC9B,GAAG;QAAC;QAAO;QAAa;KAAS;IAEjC,IAAA,8NAAS,EAAC;QACN,IAAI,CAAC,SAAS;QAEd,MAAM,YAAY,MAAM,IAAI,CAAC;QAC7B,IAAI,IAAI;QACR,MAAM,eAAe,YAAY;YAC7B,IAAI,IAAI,UAAU,MAAM,EAAE;gBACtB,iBAAiB,UAAU,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;gBAChD;YACJ,OAAO;gBACH,cAAc;YAClB;QACJ,GAAG;QAEH,OAAO;YACH,cAAc;QAClB;IACJ,GAAG;QAAC;QAAU;QAAU;KAAQ;IAEhC,qBACI,0PAAC;QACG,KAAK;QACL,WAAW,IAAA,qIAAE,EAAC,wDAAwD;QACrE,GAAG,KAAK;kBAER;;;;;;AAGb","debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelsaleev/PennApps-Project/frontend/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { DM_Sans } from \"next/font/google\";\nimport { TypingAnimation } from \"./components/ui/typing-animation\";\n\nconst dmSans = DM_Sans({\n    subsets: [\"latin\"],\n    weight: [\"200\", \"500\", \"700\"],\n});\n\nconst LandingPage = () => {\n    const router = useRouter();\n    const [animationKey, setAnimationKey] = useState(0);\n    const [showTradingPlatform, setShowTradingPlatform] = useState(false);\n\n    const handleLaunchPlatform = () => {\n        setShowTradingPlatform(true);\n    };\n\n    // Reset animation every 15 seconds (adjust timing as needed)\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setAnimationKey((prev) => prev + 1);\n        }, 13000);\n\n        return () => clearInterval(interval);\n    }, []);\n\n    const codeLines = [\n        { content: \"// Typing in your trade\", className: \"text-gray-400 mb-4\" },\n        { content: \"if NVDA price < 180:\", className: \"text-blue-400\" },\n        { content: \" { \", className: \"text-white\" },\n        { content: \"    buy 15 NVDA\", className: \"text-purple-400\" },\n        { content: \" } \", className: \"text-white\" },\n        { content: \"\", className: \"text-blue-400\" },\n        { content: \"if AMZN growth < 0.1 and AMZN price > 180:\", className: \"text-green-400\" },\n        { content: \"{\", className: \"text-blue-400 mt-4\" },\n        { content: \"    sell 10 AMZN\", className: \"text-yellow-400\" },\n        { content: \"}\", className: \"text-white\" },\n\n        { content: \"transition\", className: \"text-purple-400 ml-12 mt-1\" },\n        { content: \"={{ \", className: \"text-white\" },\n        { content: \"ease:\", className: \"text-blue-400\" },\n        { content: ' \"easeOut\"', className: \"text-green-400\" },\n        { content: \" }}\", className: \"text-white\" },\n        { content: \"animate\", className: \"text-purple-400 ml-12 mt-1\" },\n        { content: \"={{ \", className: \"text-white\" },\n        { content: \"rotate:\", className: \"text-blue-400\" },\n        { content: \" 360\", className: \"text-green-400\" },\n        { content: \" }}\", className: \"text-white\" },\n        { content: \"/>\", className: \"text-white ml-8 mt-1\" },\n        { content: \");\", className: \"text-white ml-4 mt-2\" },\n        { content: \"}\", className: \"text-white mt-2\" },\n    ];\n\n    return (\n        <div className=\"min-h-screen bg-black\">\n            {!showTradingPlatform ? (\n                <div className=\"flex flex-col items-center justify-center px-4 py-12\">\n                    {/* Header Section */}\n                    <div className={`${dmSans.className} text-center mb-12`}>\n                        <h1\n                            className={`${dmSans.className} text-6xl md:text-7xl font-bold mb-4 bg-gradient-to-r from-amber-400 via-red-400 to-amber-300 bg-clip-text text-transparent pb-2 leading-tight`}\n                        >\n                            Trading Made Easy\n                        </h1>\n                        <p className=\"text-xl mb-8 bg-transparent shimmer-text\">Become your own Hedge Fund</p>\n                        <button\n                            onClick={handleLaunchPlatform}\n                            className=\"execute-trades-btn bg-black hover:bg-gray-800 text-white px-8 py-3 rounded-full text-lg font-medium transition-colors duration-200 border-2 bg-gradient-to-r from-amber-400 via-red-400 to-amber-300 border-transparent\"\n                            style={{\n                                background: 'linear-gradient(black, black) padding-box, linear-gradient(90deg, #fbbf24, #f87171, #fcd34d) border-box'\n                            }}\n                        >\n                            Execute Trades\n                        </button>\n                    </div>\n\n                    {/* Code Snippets Section */}\n                    <div className=\"flex flex-col md:flex-row gap-8 max-w-6xl w-full\">\n                        {/* Left Code Block with Typing Animation */}\n                        <div className=\"flex-1\">\n                            <div \n                                className=\"bg-gray-900 rounded-2xl p-6 h-[450px] font-mono text-sm overflow-hidden border-2 border-transparent\"\n                                style={{\n                                    background: 'linear-gradient(#1f2937, #1f2937) padding-box, linear-gradient(90deg, #fbbf24, #f87171, #fcd34d) border-box'\n                                }}\n                            >\n                                <TypingAnimation\n                                    key={animationKey}\n                                    className=\"text-white text-sm font-mono text-left whitespace-pre-line\"\n                                    duration={100}\n                                >\n                                    {codeLines\n                                        .map((line, index) => `${line.content}${index < codeLines.length - 1 ? \"\\n\" : \"\"}`)\n                                        .join(\"\")}\n                                </TypingAnimation>\n                            </div>\n                        </div>\n\n                        {/* Right Image Block - ChatGPT Image */}\n                        <div className=\"flex-1\">\n                            <div \n                                className=\"bg-white rounded-2xl h-[450px] flex items-center justify-center overflow-hidden border-2 border-transparent\"\n                                style={{\n                                    background: 'linear-gradient(white, white) padding-box, linear-gradient(90deg, #fbbf24, #f87171, #fcd34d) border-box'\n                                }}\n                            >\n                                <img \n                                    src=\"/chatgpt-image.png\" \n                                    alt=\"ChatGPT Trading Assistant\" \n                                    className=\"w-full h-full object-fill\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                /* Trading Platform iframe */\n                <div className=\"h-screen flex flex-col\">\n                    {/* Header with back button */}\n                    <div className=\"bg-white shadow-sm border-b px-6 py-4 flex items-center justify-between\">\n                        <div className=\"flex items-center space-x-4\">\n                            <button\n                                onClick={() => setShowTradingPlatform(false)}\n                                className=\"flex items-center space-x-2 text-gray-600 hover:text-gray-800 transition-colors\"\n                            >\n                                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                                </svg>\n                                <span>Back to Intro Page</span>\n                            </button>\n                            <h2 className=\"text-xl font-semibold text-gray-800\">Portfolio Trading Platform</h2>\n                        </div>\n                        <div className=\"text-sm text-gray-500\">\n                            Powered by Flask Backend\n                        </div>\n                    </div>\n                    \n                    {/* iframe container */}\n                    <div className=\"flex-1 bg-gray-100\">\n                        <iframe\n                            src=\"http://localhost:5002\"\n                            className=\"w-full h-full border-0\"\n                            title=\"Portfolio Trading Platform\"\n                            sandbox=\"allow-same-origin allow-scripts allow-forms allow-popups allow-top-navigation\"\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default LandingPage;"],"names":[],"mappings":"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","debugId":null}}]
}